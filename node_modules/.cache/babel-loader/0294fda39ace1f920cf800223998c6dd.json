{"ast":null,"code":"var _jsxFileName = \"/Users/andrii/Desktop/toDo/src/components/toDoS/toDoItem/toDoItem.jsx\";\nimport React from \"react\";\nimport classes from \"./toDoItem.module.css\";\nimport * as ACTIONS from \"../../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst ToDoItem = props => {\n  const removeHandler = () => {\n    props.removeTask(props.id);\n    sessionStorage.removeItem(props.id);\n  };\n\n  const toggleMarkHandler = () => {\n    props.toggleMark(props.id);\n    let toggledTask = props.tasks.find(task => {\n      return task.id === props.id;\n    });\n    toggledTask.active = !toggledTask.active;\n    sessionStorage.setItem(props.id, JSON.stringify(toggledTask));\n  };\n\n  let taskStyle = [classes.Task];\n\n  if (!props.active) {\n    taskStyle.push(classes.Done);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ToDoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CheckBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    checked: !props.active ? true : false,\n    onClick: toggleMarkHandler,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: taskStyle.join(\" \"),\n    onClick: toggleMarkHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.task), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: removeHandler,\n    className: classes.Remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"\\u2716\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.toDo.tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeTask: taskId => dispatch(ACTIONS.remooveTaskActionCreator(taskId)),\n    toggleMark: taskId => dispatch(ACTIONS.toggleMarkActionCreator(taskId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoItem);","map":{"version":3,"sources":["/Users/andrii/Desktop/toDo/src/components/toDoS/toDoItem/toDoItem.jsx"],"names":["React","classes","ACTIONS","connect","ToDoItem","props","removeHandler","removeTask","id","sessionStorage","removeItem","toggleMarkHandler","toggleMark","toggledTask","tasks","find","task","active","setItem","JSON","stringify","taskStyle","Task","push","Done","CheckBox","join","Remove","mapStateToProps","state","toDo","mapDispatchToProps","dispatch","taskId","remooveTaskActionCreator","toggleMarkActionCreator"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,aAAa,GAAG,MAAM;AAC1BD,IAAAA,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACG,EAAvB;AACAC,IAAAA,cAAc,CAACC,UAAf,CAA0BL,KAAK,CAACG,EAAhC;AACD,GAHD;;AAKA,QAAMG,iBAAiB,GAAG,MAAM;AAC9BN,IAAAA,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACG,EAAvB;AAEA,QAAIK,WAAW,GAAGR,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAU;AAC3C,aAAOA,IAAI,CAACR,EAAL,KAAYH,KAAK,CAACG,EAAzB;AACD,KAFiB,CAAlB;AAGAK,IAAAA,WAAW,CAACI,MAAZ,GAAqB,CAACJ,WAAW,CAACI,MAAlC;AACAR,IAAAA,cAAc,CAACS,OAAf,CAAuBb,KAAK,CAACG,EAA7B,EAAiCW,IAAI,CAACC,SAAL,CAAeP,WAAf,CAAjC;AACD,GARD;;AAUA,MAAIQ,SAAS,GAAG,CAACpB,OAAO,CAACqB,IAAT,CAAhB;;AACA,MAAI,CAACjB,KAAK,CAACY,MAAX,EAAmB;AACjBI,IAAAA,SAAS,CAACE,IAAV,CAAetB,OAAO,CAACuB,IAAvB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACG,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACwB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,CAACpB,KAAK,CAACY,MAAP,GAAgB,IAAhB,GAAuB,KADlC;AAEE,IAAA,OAAO,EAAEN,iBAFX;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAK,IAAA,SAAS,EAAEU,SAAS,CAACK,IAAV,CAAe,GAAf,CAAhB;AAAqC,IAAA,OAAO,EAAEf,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkEN,KAAK,CAACW,IAAxE,CARF,eASE;AAAK,IAAA,OAAO,EAAEV,aAAd;AAA6B,IAAA,SAAS,EAAEL,OAAO,CAAC0B,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAeD,CAnCD;;AAoCA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLf,IAAAA,KAAK,EAAEe,KAAK,CAACC,IAAN,CAAWhB;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzB,IAAAA,UAAU,EAAG0B,MAAD,IAAYD,QAAQ,CAAC9B,OAAO,CAACgC,wBAAR,CAAiCD,MAAjC,CAAD,CAD3B;AAELrB,IAAAA,UAAU,EAAGqB,MAAD,IAAYD,QAAQ,CAAC9B,OAAO,CAACiC,uBAAR,CAAgCF,MAAhC,CAAD;AAF3B,GAAP;AAID,CALD;;AAOA,eAAe9B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./toDoItem.module.css\";\nimport * as ACTIONS from \"../../../redux/actions\";\nimport { connect } from \"react-redux\";\nconst ToDoItem = (props) => {\n  const removeHandler = () => {\n    props.removeTask(props.id);\n    sessionStorage.removeItem(props.id);\n  };\n\n  const toggleMarkHandler = () => {\n    props.toggleMark(props.id);\n\n    let toggledTask = props.tasks.find((task) => {\n      return task.id === props.id;\n    });\n    toggledTask.active = !toggledTask.active;\n    sessionStorage.setItem(props.id, JSON.stringify(toggledTask));\n  };\n\n  let taskStyle = [classes.Task];\n  if (!props.active) {\n    taskStyle.push(classes.Done);\n  }\n  return (\n    <div className={classes.ToDoItem}>\n      <div className={classes.CheckBox}>\n        <input\n          checked={!props.active ? true : false}\n          onClick={toggleMarkHandler}\n          type=\"checkbox\"\n        />\n      </div>\n      <div className={taskStyle.join(\" \")} onClick={toggleMarkHandler}>{props.task}</div>\n      <div onClick={removeHandler} className={classes.Remove}>\n      &#10006;\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.toDo.tasks,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeTask: (taskId) => dispatch(ACTIONS.remooveTaskActionCreator(taskId)),\n    toggleMark: (taskId) => dispatch(ACTIONS.toggleMarkActionCreator(taskId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoItem);\n"]},"metadata":{},"sourceType":"module"}