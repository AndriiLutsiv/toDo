{"ast":null,"code":"var _jsxFileName = \"/Users/andrii/Desktop/toDo/src/components/inputComponent/inputComponent.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./inputComponent.module.css\";\nimport * as ACTIONS from \"../../redux/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst InputComponent = props => {\n  const userTypingHandler = e => {\n    props.userTypingActionCreator(e.target.value);\n  };\n\n  const addTaskHandler = () => {\n    let newTask = {\n      id: String(uuidv4()),\n      task: props.usersInputValue,\n      active: true\n    };\n    props.addTask(newTask);\n    sessionStorage.setItem(newTask.id, JSON.stringify(newTask));\n    props.userTypingActionCreator(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.InputComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: props.usersInputValue,\n    placeholder: \"Search for task\",\n    onChange: userTypingHandler,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Button,\n    onClick: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: props.usersInputValue === \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"+\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    usersInputValue: state.toDo.usersInputValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTask: newTask => dispatch(ACTIONS.addTaskActionCreator(newTask)),\n    userTypingActionCreator: text => dispatch(ACTIONS.userTypingActionCreator(text))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputComponent);","map":{"version":3,"sources":["/Users/andrii/Desktop/toDo/src/components/inputComponent/inputComponent.jsx"],"names":["React","useState","connect","classes","ACTIONS","v4","uuidv4","InputComponent","props","userTypingHandler","e","userTypingActionCreator","target","value","addTaskHandler","newTask","id","String","task","usersInputValue","active","addTask","sessionStorage","setItem","JSON","stringify","Button","mapStateToProps","state","toDo","mapDispatchToProps","dispatch","addTaskActionCreator","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BF,IAAAA,KAAK,CAACG,uBAAN,CAA8BD,CAAC,CAACE,MAAF,CAASC,KAAvC;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIC,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAEC,MAAM,CAACX,MAAM,EAAP,CADA;AAEVY,MAAAA,IAAI,EAAEV,KAAK,CAACW,eAFF;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAd;AAKAZ,IAAAA,KAAK,CAACa,OAAN,CAAcN,OAAd;AACAO,IAAAA,cAAc,CAACC,OAAf,CAAuBR,OAAO,CAACC,EAA/B,EAAmCQ,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAnC;AACAP,IAAAA,KAAK,CAACG,uBAAN,CAA8B,EAA9B;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAER,OAAO,CAACI,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEC,KAAK,CAACW,eADjB;AAEI,IAAA,WAAW,EAAE,iBAFjB;AAGI,IAAA,QAAQ,EAAEV,iBAHd;AAII,IAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACuB,MAAxB;AAAgC,IAAA,OAAO,EAAEZ,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,QAAQ,EAAEN,KAAK,CAACW,eAAN,KAA0B,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAPJ,CADJ;AAaH,CA7BD;;AA8BA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,eAAe,EAAES,KAAK,CAACC,IAAN,CAAWV;AADzB,GAAP;AAGH,CAJD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHV,IAAAA,OAAO,EAAGN,OAAD,IAAagB,QAAQ,CAAC3B,OAAO,CAAC4B,oBAAR,CAA6BjB,OAA7B,CAAD,CAD3B;AAEHJ,IAAAA,uBAAuB,EAAGsB,IAAD,IACrBF,QAAQ,CAAC3B,OAAO,CAACO,uBAAR,CAAgCsB,IAAhC,CAAD;AAHT,GAAP;AAKH,CAND;;AAQA,eAAe/B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,cAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./inputComponent.module.css\";\nimport * as ACTIONS from \"../../redux/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst InputComponent = (props) => {\n    const userTypingHandler = (e) => {\n        props.userTypingActionCreator(e.target.value);\n    };\n\n    const addTaskHandler = () => {\n        let newTask = {\n            id: String(uuidv4()),\n            task: props.usersInputValue,\n            active: true,\n        };\n        props.addTask(newTask);                                            \n        sessionStorage.setItem(newTask.id, JSON.stringify(newTask));       \n        props.userTypingActionCreator(\"\");\n    };\n\n    return (\n        <div className={classes.InputComponent}>\n            <input\n                value={props.usersInputValue}\n                placeholder={\"Search for task\"}\n                onChange={userTypingHandler}\n                type=\"text\"\n            />\n            <div className={classes.Button} onClick={addTaskHandler}>\n                <button disabled={props.usersInputValue === \"\"}>+</button>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        usersInputValue: state.toDo.usersInputValue,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTask: (newTask) => dispatch(ACTIONS.addTaskActionCreator(newTask)),\n        userTypingActionCreator: (text) =>\n            dispatch(ACTIONS.userTypingActionCreator(text)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputComponent);\n"]},"metadata":{},"sourceType":"module"}